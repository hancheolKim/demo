<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.erp.dao.ItemDAO">
    <sql id="itemSearch">
        <where>
            <if test="keyword != null and keyword != ''">
                <if test="keyfield == 1">
                    item_num LIKE CONCAT('%', #{keyword}, '%')
                </if>
                <if test="keyfield == 2">
                    item_name LIKE CONCAT('%', #{keyword}, '%')
                </if>
                <if test="keyfield == 3">
                    category_name LIKE CONCAT('%', #{keyword}, '%')
                </if>
            </if>
        </where>
    </sql>

    <sql id="itemOrder">
        <choose>
            <when test="order == 1">
                ORDER BY price ASC
            </when>
            <when test="order == 2">
                ORDER BY price DESC
            </when>
            <when test="order == 3">
                ORDER BY item_quantity DESC
            </when>
            <when test="order == 4">
                ORDER BY item_quantity ASC
            </when>
            <otherwise>
                ORDER BY item_upt_date DESC
            </otherwise>
        </choose>
    </sql>

    <!-- 아이템 카운트 조회 -->
    <select id="getItemCount" resultType="int" parameterType="map">
        select count(*) from Item
        <include refid="itemSearch"></include>
    </select>

    <!-- 아이템 리스트 조회 -->
    <select id="getAllItems" resultType="ItemVO" parameterType="map">
        SELECT
            item_num,
            item_name,
            price,
            cost_price,
            item_quantity,
            item_upt_date,
            item_notes,
            category_name
        FROM Item
        <include refid="itemSearch"/>
        <include refid="itemOrder"></include>
        LIMIT #{start}, 15
    </select>

    <!--아이템 재고 조회 -->
    <select id="getStock" resultType="ItemVO" parameterType="map">
        select
            Item_num,
            Item_name,
            cost_price,
            item_quantity,
            defective_quantity,
            stock_date
        from Item;
        <include refid="itemSearch"/>
        Order by stock_date

    </select>

    <!-- 아이템 조회 -->
    <select id="getItemById" resultType="ItemVO">
        SELECT item_num, item_name, price, item_quantity, item_upt_date, item_notes, category_name
        FROM Item
        WHERE item_num = #{itemNum}
    </select>

    <!-- 수량 변경  -->
    <update id="updateItemQuantity" parameterType="map">
        UPDATE Item
        SET item_quantity = item_quantity - #{quantity}
        WHERE item_num = #{itemNum}
        AND item_quantity >= #{quantity}
    </update>
</mapper>
